name: Publish HF Space Docker Image

# 定义触发条件：手动触发或检测到新的 Release
on:
  workflow_dispatch:  # 支持手动触发
  release:
    types: [published]  # 当 Release 被发布时自动触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 检出代码，以便获取最新的代码和 Release 信息
      - name: Checkout code
        uses: actions/checkout@v4  # 使用最新版本的 checkout 动作

      # 设置 Docker Buildx，用于支持多平台构建
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # 更新到最新版本

      # 登录 Docker Hub，使用 GitHub Secrets 存储的凭据
      - name: Log in to Docker Hub
        uses: docker/login-action@v3  # 更新到最新版本
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 动态获取 Release Tag，如果是手动触发则使用 'latest'
      - name: Get Release Tag
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG=${{ github.event.release.tag_name }}
          else
            TAG="latest"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        shell: bash

      # 构建并推送 Docker 镜像，支持多平台，并根据触发类型打上不同的 tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5  # 使用最新版本
        with:
          context: .  # 构建上下文为仓库根目录
          platforms: linux/amd64,linux/arm64  # 支持多平台构建
          push: true  # 推送镜像到 Docker Hub
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/hfspace:${{ steps.get_tag.outputs.tag }}
            ${{ github.event_name == 'release' && format('{0}/hfspace:latest', secrets.DOCKER_USERNAME) || '' }}  # 如果是 Release 触发，同时打最新标签
          cache-from: type=gha  # 使用 GitHub Actions 的缓存加速构建
          cache-to: type=gha,mode=max  # 缓存构建结果以供后续使用
